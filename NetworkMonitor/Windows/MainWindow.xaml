<Window x:Class="NetworkMonitor.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetworkMonitor.Windows"
        xmlns:viewmodels="clr-namespace:NetworkMonitor.ViewModels"
        xmlns:netinfo="clr-namespace:System.Net.NetworkInformation;assembly=System"
        xmlns:properties="clr-namespace:NetworkMonitor.Properties"
        mc:Ignorable="d"
        Top="{Binding Top, Source={x:Static properties:Settings.Default}, Mode=TwoWay}"
        Left="{Binding Left, Source={x:Static properties:Settings.Default}, Mode=TwoWay}"
        Topmost="{Binding TopMost, Source={x:Static properties:Settings.Default}, Mode=OneWay}"
        ShowInTaskbar="{Binding IsChecked, ElementName=topMostToggle, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
        Title="Network Monitor"
        MouseDown="Window_MouseDown"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        BorderThickness="0"
        BorderBrush="LightGray"
        SizeToContent="WidthAndHeight"
        Closing="Window_Closing"
        ResizeMode="NoResize">
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <Border Margin="2" Background="White">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" Opacity="0.125" BlurRadius="3"/>
        </Border.Effect>
        <StackPanel Orientation="{Binding IsChecked, ElementName=horizontalLayoutToggle, Mode=OneWay, Converter={StaticResource BooleanToOrientationConverter}}" Margin="5">
            <StackPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="MinWidth" Value="73"/>
                </Style>
                <Style TargetType="TextBlock" x:Key="IconTextBlockStyle">
                    <Setter Property="Margin" Value="3,0,6,0"/>
                    <Setter Property="Width" Value="14"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Style>
                <Style TargetType="TextBlock" x:Key="InfoTextBlockStyle">
                    <Setter Property="FontSize" Value="14"/>
                </Style>
            </StackPanel.Resources>
            <StackPanel ToolTip="Send (bps)" Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Send, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="▲" Style="{StaticResource IconTextBlockStyle}"/>
                <TextBlock Text="{Binding Send}" Style="{StaticResource InfoTextBlockStyle}"/>
            </StackPanel>
            <StackPanel ToolTip="Receive (bps)" Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Receive, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="▼" Style="{StaticResource IconTextBlockStyle}"/>
                <TextBlock Text="{Binding Receive}" Style="{StaticResource InfoTextBlockStyle}"/>
            </StackPanel>
            <StackPanel ToolTip="Ping (ms)" Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Ping, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="●" Style="{StaticResource IconTextBlockStyle}"/>
                <TextBlock Text="{Binding Ping}" Style="{StaticResource InfoTextBlockStyle}"/>
            </StackPanel>
        </StackPanel>
    </Border>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="_Close" Click="Close_Click"/>
            <MenuItem Header="_Options">
                <MenuItem x:Name="topMostToggle" Header="_Topmost" IsCheckable="True" IsChecked="{Binding TopMost, Source={x:Static properties:Settings.Default}, Mode=TwoWay}" StaysOpenOnClick="True"/>
                <MenuItem x:Name="horizontalLayoutToggle" Header="_Use Horizontal Layout" IsCheckable="True" IsChecked="{Binding UseHorizontalLayout, Source={x:Static properties:Settings.Default}, Mode=TwoWay}" StaysOpenOnClick="True"/>
            </MenuItem>
            <MenuItem Header="_Statistics">
                <MenuItem Header="_Send" IsCheckable="True" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Send, Mode=TwoWay}" StaysOpenOnClick="True"/>
                <MenuItem Header="_Receive" IsCheckable="True" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Receive, Mode=TwoWay}" StaysOpenOnClick="True"/>
                <MenuItem Header="_Ping..." Click="PingMenuItem_Click"/>
            </MenuItem>
        </ContextMenu>
    </Window.ContextMenu>
    <Window.Resources>
        <Storyboard x:Key="FadeIn">
            <DoubleAnimation To="1" Duration="0:0:0.05" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="FadeOut">
            <DoubleAnimation To="0.4" Duration="0:0:0.05" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="PreviewMouseDown">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseEnter">
            <BeginStoryboard Storyboard="{StaticResource FadeOut}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
        </EventTrigger>
    </Window.Triggers>
</Window>
