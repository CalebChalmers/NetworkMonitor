<Window x:Class="NetworkMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetworkMonitor"
        xmlns:properties="clr-namespace:NetworkMonitor.Properties"
        mc:Ignorable="d"
        Title="Network Monitor" Height="{Binding Source={x:Static properties:Settings.Default}, Path=Height, Mode=TwoWay}" Width="{Binding Source={x:Static properties:Settings.Default}, Path=Width, Mode=TwoWay}" Top="{Binding Source={x:Static properties:Settings.Default}, Path=Top, Mode=TwoWay}" Left="{Binding Source={x:Static properties:Settings.Default}, Path=Left, Mode=TwoWay}" Topmost="{Binding Source={x:Static properties:Settings.Default}, Path=TopMost}" ShowInTaskbar="False" Closing="Window_Closing" Margin="0" MouseDown="Window_MouseDown" Background="White" BorderThickness="0" BorderBrush="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" WindowStyle="None" Loaded="Window_Loaded" AllowsTransparency="True" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
    </Window.Resources>
    <WrapPanel x:Name="statPanel" Orientation="Vertical" Margin="8,6,0,6">
        <WrapPanel.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
            <Style TargetType="StackPanel">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Orientation" Value="Horizontal"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="IconTextBlockStyle">
                <Setter Property="Width" Value="14"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="InfoTextBlockStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="6,0"/>
            </Style>
        </WrapPanel.Resources>
        <StackPanel ToolTip="Send (bps)" Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Send, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="▲" Style="{StaticResource IconTextBlockStyle}"/>
            <TextBlock x:Name="txt_send" Style="{StaticResource InfoTextBlockStyle}"/>
        </StackPanel>
        <StackPanel ToolTip="Receive (bps)" Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Receive, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="▼" Style="{StaticResource IconTextBlockStyle}"/>
            <TextBlock x:Name="txt_receive" Style="{StaticResource InfoTextBlockStyle}"/>
        </StackPanel>
        </StackPanel>
    </WrapPanel>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="_Close" Click="Close_Click"/>
            <MenuItem Header="_Topmost" IsCheckable="True" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=TopMost, Mode=TwoWay}" Unchecked="TopMost_Unchecked" Checked="TopMost_Checked" StaysOpenOnClick="True"/>
            <MenuItem x:Name="interfaceSelect" Header="_Interface"/>
            <MenuItem Header="_Statistics">
                <MenuItem Header="_Send" IsCheckable="True" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Send, Mode=TwoWay}" StaysOpenOnClick="True"/>
                <MenuItem Header="_Receive" IsCheckable="True" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Stat_Receive, Mode=TwoWay}" StaysOpenOnClick="True"/>
                <MenuItem Header="_Ping..." Click="PingMenuItem_Click" />
            </MenuItem>
        </ContextMenu>
    </Window.ContextMenu>
    <Window.Triggers>
        <EventTrigger RoutedEvent="PreviewMouseDown">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetProperty="Opacity" />
                </Storyboard>
            </BeginStoryboard>            
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseEnter">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation To="0.25" Duration="0:0:0.15" Storyboard.TargetProperty="Opacity" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetProperty="Opacity" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
</Window>
